public class Test {



    //day2
    //数据库是一类软件：管理数据的软件，把数据存储在硬盘上。很方便进行“增删查改”
    //MySQL 是一个客户端 服务器结构的软件。控制台上的任何一个命令，都是通过网络的方式，和服务器进行交互。
    //一个 MySQL 服务器上可以同时管理多组这样的数据集合
    // 显示数据库：show databases;
    // 创建数据库：create database 数据库名;  不能是关键字，是关键字的话 要加反引号 `数据库名`
    // 选中数据库：use 数据库名;
    // 删除数据库：drop database 数据库名;
    //公司当中涉及到的环境：
    // 1、办公环境：入职时候发的电脑。完成日常的办公
    // 2、开发/测试环境：以服务器的形式提供的。用办公电脑通过网络远程控制。
    // 3、线上/生产环境，也是服务器，用办公电脑通过网络远程控制。运行程序，给外面的用户提供服务。就是直接供用户使用
    //    生产环境挂掉的话，会有很大的损伤
    // 4、避免生产环境的数据被删除：（1）权限控制  （2）做好备份

    //数据表的操作：数据表：数据库里面有数据表，数据表就是类似于 excel，数据表有很多行，每一行是一条“记录”
    //    每一行又有很多列，每一列是一个“字段”。  MySQL 数据库，要求每一行这里的列都是一致的。
    //行和行的列数一样，列和列数据类型一样。所以在创建数据表的时候，
    // 为了描述数据表中的列的信息，就需要指定表头。表头：一个表格第一行的那个描述信息）

    // 不是所有的数据，都是按照表格的方式来组织数据的。MySQL Oracle SQLServer 都是按照表格方式组织，就是关系数据库
    // 像 Redis HBase MongoDB 不是按照表格方式组织的。称为“非关系型数据库”

    //数值类型：
    // SQL中的类型，和 Java 中的类型，虽然对应，但是名字不一样。
    // 1、BIT(M) 范围 1-64 二进制  就是一个比特位
    // 2、TINYINT  一个字节  类似于byte
    // 3、SMALLINT 两个字节  类似于short
    // 3、INT      四个字节  类似于int
    // 4、BIGINT   八个字节  类似于long
    // 5、FLOAT(M,D)    四个字节  单精度，M指定长度，D指定小数位数，会发生精度丢失
    // 6、DOUBLE(M,D)   八个字节  进度高
    // 7、DECIMAL(M,D)  能够精确的表示小数

    // SQL 当中也有 unsigned 但是使用这些会导致溢出，占用服务器。
    // 可变长字符串：varchar 可以根据实际需要，来指定要占多少空间。
    // text：会根据传入的数据，更改文本数据。
    // BLOB 用于表示二进制文件：mp3 文件，jpg 文件，class 文件都是二进制文件， txt，java，c都属于文本文件
    // 日期在数据库当中也可以使用 varchar 来表示，但是就失去了对日期的校验功能（判定这个日期是否合法）
    // DATETIME 用 8 个字节来表示时间，
    // TIMESTAMP 用 4 个字节来表示时间，是时间戳。得到毫秒级的时间戳。
    // 时间戳概念：以1970.1.1.0时.0分.0秒作为基准时刻来计算秒数之差。到 2038 年，4个字节的 TIMESTAMP 就不够用了


    //创建商品表：名字，编号，单价，供应商
    //在代码中表示钱，一般有两种方式：
    // 1、Decimal
    // 2、使用 int 单位是分就好了。常见的手段，运算效率高
    // 如果在敲一个比较复杂的 SQL 的时候，可以写在记事本当中，然后复制粘贴到控制台里。


    //数据表的操作
    // 1、创建表：create table 表名（列名 类型，列名 类型）;     操作前，要先选中数据库
    //       create table student(id int,name varchar(50),age int,score double(3,1));
    //       创建的表，只是列，行不限制。
    // 列名在前，类型在后。
    // 2、查看表：show tables;
    // 3、查看表结构：desc 表名;
    // 4、删除表：drop table 表名;
    //      alter 修改表结构
    // 5、创建表的时候，可以使用 comment 来给某个列后面加上注释。
    // 6、“-- ”是更普遍使用的注释。两个横线一个空格。
    // 7、列名可以是下划线，但不能是横线。



    //day1
    //数据库：也是软件，功能是管理数据。实现数据存储，在软件的内部，会广泛的使用到各种数据结构
    //通过数据库，来对数据进行增删查改。数据库保存的数据，在硬盘上
    //代码中的变量，定义在内存，所以之前的东西都放在内存当中。数据库则是保存在硬盘上
    //数据库：持久化存储的方式。
    //服务器：一般不需要页面，在后台运行       数据库存储数据，是通过后面的服务器来操作的
    //数据库都是通过 SQL 语句来操作的
    //也有少数数据库，把数据存在内存当中：Redis Tair

    //MySQL 学这些：SQL 语句      数据库的一些内部原理      数据库编程（jdbc）
    //通过 SQL 来操作数据库   我们说的数据库指的是一个 MySQL 服务器上，所管理的一个独立的数据集合

    //数据库操作：
    // 1、显示当前服务器上有哪些数据库：show databases;  之间的空格可以有多个
    // 2、创建数据库：create database 数据库的名字;       数据库的名字可以随便起，但不能是 SQL 的关键字
    //    如果要使用关键字的话，用反引号（左上角，一定是英文输入法的）引起来 ``      如果数据库名字和关键字一样的话
    //    就会报错。报错的提示都是最简单最基础的英文。靠自己看
    // 3、如果要重新输入一遍上一次的 SQL ，直接按方向键就能找到历史命令
    // 4、选中数据库/使用数据库：use 数据库名;  切换之后并不方便查询当前选中了哪个，不过影响也不大。
    //      多执行几次 use 也没有副作用。
    // 5、删除数据库：drop database 数据库名;  删除数据库。执行成功之后，数据就大概率恢复不回来了
    //      个别 SQL 后面不加 ; 也行，但建议还是加上。 把一个 SQL 分为多行来写，用回车。
    // 6、如果系统没有这个数据库，就创建，有就不创建。：create database if not exists user2;
    // 7、创建数据库的时候，指定字符集：create database if not exists user2 character set utf8mb4;


    //这里的数据库，有些是自己的，有些是系统自带的，动系统数据的话，就会导致数据库有问题
    //命令行下输入的 SQL 语句，基本都是以 分号 结尾。SQL 不区分大小写，建议小写，不然不好找错误
    //SQL 中的单词基本上是使用空格分割的
    //计算机常用操作的时间：大约
    // 访问网络：秒-ms
    // 访问磁盘：ms-us
    // 访问内存：us-ns
    // 操作cpu：ps
    //因为数据库要访问磁盘，所以往往是比较慢的环节
    //生产环境的数据库非常重要，稍有不慎，就会亏很多钱。

    //一个常见的面试题：让你说出：RTS FPS MOBA RPG 这些单词的含义
}
